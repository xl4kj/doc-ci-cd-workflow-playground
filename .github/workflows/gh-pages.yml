# This is a basic workflow to help you get started with Actions

name: gh-pages

on:
  push:
    branches: ["*"]
    paths-ignore:
      - README.md
      - CONTRIBUTING.md
      - LICENSE.md
      - .gitignore
  pull_request:
    branches: ["*"]
    paths-ignore:
      - README.md
      - CONTRIBUTING.md
      - LICENSE.md
      - .gitignore
  release:
    types:
      - created
      - edited

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.10" # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: "x64" # optional x64 or x86. Defaults to x64 if not specified

      - name: Install deps
        run: |-
          python -m pip install -r requirements-dev.txt

      - name: Build branch
        id: build-branches
        run: |-
        
          # Debug information
          echo "GitHub ref: $GITHUB_REF"
          echo "GitHub head ref: $GITHUB_HEAD_REF"
          echo "GitHub ref type: $GITHUB_REF_TYPE"
          echo "Event name: ${{ github.event_name }}"
          
          # Determine correct path for content
          if [[ "$GITHUB_REF_TYPE" == "tag" ]]; then
            # For tags, extract the version number and create a versioned folder
            TAG=${GITHUB_REF#refs/}
            SUBPATH="${TAG}" # ex. tags/v1.0.0
            echo "This is a tag build: $TAG"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # For pull requests, use the PR number
            PR_NUMBER="${{ github.event.pull_request.number }}"
            SUBPATH="prs/pr-${PR_NUMBER}" # ex. prs/pr-53
            echo "This is a PR build: $PR_NUMBER"
          else
            # For branch pushes, use the branch name
            BRANCH=${GITHUB_REF#refs/heads/}
            SUBPATH="${BRANCH}" # ex. versione-corrente, warning-removal
            echo "This is a branch build: $BRANCH"
          fi
          
          echo "Publishing $SUBPATH"
          
          # Create output directories
          mkdir -p "html/${SUBPATH}/it"
          mkdir -p "html/${SUBPATH}/en"

          echo "Publishing html/$SUBPATH/it"
          echo "Publishing html/$SUBPATH/en"

          sphinx-build -b html docs/it/ html/$SUBPATH/it
          sphinx-build -b html docs/en/ html/$SUBPATH/en
          
          # Create index file in this version's directory
          echo "
          <html>
          <head>
            <title>IT-Wallet System Technical Specifications - ($SUBPATH)</title>
            <meta name="viewport" content="initial-scale=1.0">
            <style>
              body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
              h1 { color: #333; }
              h2 { color: #555; margin-top: 30px; }
              ul { list-style-type: none; padding: 0; }
              li { margin-bottom: 10px; }
              a { color: #0366d6; text-decoration: none; }
              a:hover { text-decoration: underline; }
              .version { font-weight: bold; }
            </style>
          </head>
          <body>
          <h1>IT-Wallet System Technical Specifications - ${SUBPATH%/}</h1>
          
          <ul>
            <li><a href=\"it/\">Italian version</a></li>
            <li><a href=\"en/\">English version</a></li>
          </ul>
          </body>
          </html>
          " > "html/${SUBPATH}/index.html"
          
          echo "subpath=$SUBPATH" >> $GITHUB_OUTPUT
          echo "make_latest=${MAKE_LATEST:-no}" >> $GITHUB_OUTPUT

      # Runs a single command using the runners shell
      - name: Create GH page index
        run: |-
          SUBPATH="${{ steps.build-branches.outputs.subpath }}"

          touch html/.nojekyll
          
          # Create main index.html with links to all versions
          echo '
          <html>
          <head>
            <title>IT-Wallet System Technical Specifications</title>
            <meta name="viewport" content="initial-scale=1.0">
            <style>
              body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
              h1 { color: #333; }
              h2 { color: #555; margin-top: 30px; }
              ul { list-style-type: none; padding: 0; }
              li { margin-bottom: 10px; }
              a { color: #0366d6; text-decoration: none; }
              a:hover { text-decoration: underline; }
              .version { font-weight: bold; }
            </style>
            <meta http-equiv=\"refresh\" content=\"0; URL='../versione-corrente/'\" />
          </head>
          <body>
              <p>Redirecting to versione-corrente page. <a href=\"../versione-corrente/\">Click here</a> if you are not redirected automatically.</p>
          </body>
          </html>' > html/index.html
          


      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: html
          keep_history: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
